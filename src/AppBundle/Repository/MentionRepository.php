<?php

namespace AppBundle\Repository;

/**
 * MentionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MentionRepository extends \Doctrine\ORM\EntityRepository
{
	public function getGlobalTotalVotant()
	{
		return $this->createQueryBuilder('m')
			->select('SUM(m.votants) as nb_votants')
			->getQuery()
			->getOneOrNullResult();
	}
	public function getGlobalTotalInscrit()
	{
		return $this->createQueryBuilder('m')
			->select('SUM(m.inscrits) as nb_inscrits')
			->getQuery()
			->getOneOrNullResult();
	}

	public function getTotalVotantForEachRegion()
	{
		return $this->createQueryBuilder('m')
			->leftJoin('m.commune', 'c')
			->leftJoin('c.departement', 'd')
			->leftJoin('d.region', 'r')
			->select('SUM(m.votants) as nb_votants, c, d, r, m ')
			->groupBy('r')
			->getQuery()
			->getResult();
	}
	public function getTotalInscritForEachRegion()
	{
		return $this->createQueryBuilder('m')
			->leftJoin('m.commune', 'c')
			->leftJoin('c.departement', 'd')
			->leftJoin('d.region', 'r')
			->select('SUM(m.inscrits) as nb_inscrits, c, d, r, m')
			->groupBy('r')
			->getQuery()
			->getResult();
	}

	public function getTotalVotantByRegion($region)
	{
		return $this->createQueryBuilder('m')
			->leftJoin('m.commune', 'c')
			->leftJoin('c.departement', 'd')
			->leftJoin('d.region', 'r')
			->select('SUM(m.votants) as nb_votants')
			->where('r = :region')->setParameter('region', $region)
			->getQuery()
			->getOneOrNullResult();
	}
	public function getTotalInscritByRegion($region)
	{
		return $this->createQueryBuilder('m')
			->leftJoin('m.commune', 'c')
			->leftJoin('c.departement', 'd')
			->leftJoin('d.region', 'r')
			->select('SUM(m.inscrits) as nb_inscrits, c, d, m')
			->where('r = :region')->setParameter('region', $region)
			->getQuery()
			->getOneOrNullResult();
	}

	public function getTotalVotantByDpt($dpt)
	{
		return $this->createQueryBuilder('m')
			->leftJoin('m.commune', 'c')
			->leftJoin('c.departement', 'd')
			->select('SUM(m.votants) as nb_votants')
			->where('d = :dpt')->setParameter('dpt', $dpt)
			->getQuery()
			->getOneOrNullResult();
	}
	public function getTotalInscritByDpt($dpt)
	{
		return $this->createQueryBuilder('m')
			->leftJoin('m.commune', 'c')
			->leftJoin('c.departement', 'd')
			->select('SUM(m.inscrits) as nb_inscrits, c, d, m')
			->where('d = :dpt')->setParameter('dpt', $dpt)
			->getQuery()
			->getOneOrNullResult();
	}

	public function getTotalVotantByCommune($commune)
	{
		return $this->createQueryBuilder('m')
			->leftJoin('m.commune', 'c')
			->select('SUM(m.votants) as nb_votants')
			->where('c = :commune')->setParameter('commune', $commune)
			->getQuery()
			->getOneOrNullResult();
	}
	public function getTotalInscritByCommune($commune)
	{
		return $this->createQueryBuilder('m')
			->leftJoin('m.commune', 'c')
			->select('SUM(m.inscrits) as nb_inscrits')
			->where('c = :commune')->setParameter('commune', $commune)
			->getQuery()
			->getOneOrNullResult();
	}

	public function getTotalVotantForEachDpt($region)
	{
		return $this->createQueryBuilder('m')
			->leftJoin('m.commune', 'c')
			->leftJoin('c.departement', 'd')
			->leftJoin('d.region', 'r')
			->select('SUM(m.votants) as nb_votants, c, d, m ')
			->where('r = :region')->setParameter('region', $region)
			->groupBy('d')
			->getQuery()
			->getResult();
	}
	public function getTotalInscritForEachDpt($region)
	{
		return $this->createQueryBuilder('m')
			->leftJoin('m.commune', 'c')
			->leftJoin('c.departement', 'd')
			->leftJoin('d.region', 'r')
			->select('SUM(m.inscrits) as nb_inscrits, c, d, m')
			->where('r = :region')->setParameter('region', $region)
			->groupBy('d')
			->getQuery()
			->getResult();
	}
}
